vertex_program SpaceVS glsl //nombre para el shader
{
	source SpaceVS.glsl // nombre del archivo del código
	default_params // valores para las variable uniform
	{
		param_named_auto modelViewProjMat worldviewproj_matrix
		param_named_auto SinTiempo sintime_0_2pi 32
	}
}

fragment_program SpaceFS glsl //nombre para el shader
{
	source SpaceFS.glsl // nombre del archivo del código
	default_params // valores para las variable uniform
	{
		param_named texturaL int 0 // 1º unidad de textura -> *
		param_named texturaM int 1 // 2º unidad de textura -> *
	}
}

vertex_program HolesVS glsl //nombre para el shader
{
	source HolesVS.glsl // nombre del archivo del código
	default_params // valores para las variable uniform
	{
		param_named_auto modelViewMat worldview_matrix
		param_named_auto modelViewProjMat worldviewproj_matrix
		param_named_auto normalMat inverse_transpose_worldview_matrix
	}
}

fragment_program HolesFS glsl //nombre para el shader
{
	source HolesFS.glsl // nombre del archivo del código
	default_params // valores para las variable uniform
	{
		param_named texturaL int 0 // 1º unidad de textura -> *
		param_named texturaM int 1 // 2º unidad de textura -> *
		param_named InColor float4 1.0 1.0 0.0 1.0 // por ejemplo 0.5 0.5 0.5 1.0
		param_named OutColor float4 0.0 1.0 0.0 1.0
		param_named_auto Flipping render_target_flipping
		param_named_auto lightDiffuse light_diffuse_colour 0
		param_named_auto lightPosition light_position_view_space 0
	}
}

vertex_program RenderQuadVS glsl
{
	source RenderQuadVS.glsl 
	default_params // valores para las variable uniform
	{
		param_named_auto modelViewProjMat worldviewproj_matrix
	}
}

fragment_program LuminancePS glsl
{
	source LuminancePS.glsl
	default_params {
		param_named RTT0 int 0 // textura con la escena
	}
}

fragment_program Kernel3x3PS glsl
{
	source Kernel3x3PS.glsl
	default_params {
		param_named RTT0 int 0 // textura con la escena
		param_named kernel float9 0 0 0 0 1 0 0 0 0
	}
}

vertex_program ExplotaVS glsl
{
	source ExplotaVS.glsl
	default_params 
	{
	}
}

geometry_program ExplotaGS glsl { // también para el GS
	source ExplotaGS.glsl // archivo del Geometry Shader
	input_operation_type triangles // tiene que coincidir con
	output_operation_type triangle_strip // las declaraciones
	max_output_vertices 3 // del Geometry shader
	default_params { // para las uniform del shader
		param_named_auto modelViewMat worldview_matrix
		param_named_auto modelViewProjMat worldviewproj_matrix
		param_named_auto normalMat inverse_transpose_worldview_matrix
		param_named_auto tiempo time
	} 
} 

fragment_program ExplotaFS glsl
{
	source ExplotaFS.glsl
	default_params {
		param_named texturaL int 0 // 1º unidad de textura -> *
		param_named texturaM int 1 // 2º unidad de textura -> *
		param_named_auto Flipping render_target_flipping
		param_named_auto lightAmbient ambient_light_colour 0
		param_named_auto lightDiffuse light_diffuse_colour 0
		param_named_auto lightPosition light_position_view_space 0
	}
}

vertex_program NormalesVS glsl
{
	source NormalesVS.glsl
	default_params 
	{
	}
}

geometry_program NormalesGS glsl {
	source NormalesGS.glsl // archivo del Geometry Shader
	input_operation_type triangles // tiene que coincidir con
	output_operation_type line_strip // las declaraciones del
	max_output_vertices 6 // Geometry shader
	default_params { // para las uniform del shader
		param_named_auto modelViewProjMat worldviewproj_matrix
	} 
}

fragment_program NormalesFS glsl
{
	source NormalesFS.glsl
	default_params {
	}
}

geometry_program Explota2GS glsl { // también para el GS
	source Explota2GS.glsl // archivo del Geometry Shader
	input_operation_type triangles // tiene que coincidir con
	output_operation_type triangle_strip // las declaraciones
	max_output_vertices 3 // del Geometry shader
	default_params { // para las uniform del shader
		param_named_auto modelViewMat worldview_matrix
		param_named_auto modelViewProjMat worldviewproj_matrix
		param_named_auto normalMat inverse_transpose_worldview_matrix
		param_named_auto tiempo time
		param_named_auto tiempo2pi sintime_0_2pi 32
	} 
} 

material IG2/spaceGLSL
{
	technique
	{
		pass
		{
			vertex_program_ref SpaceVS
			{ // params -> default_params
			}
			fragment_program_ref SpaceFS
			{ // params -> default_params
			}
			lighting off
			diffuse vertexcolour
			texture_unit
				{
				texture lightMap.jpg
				tex_address_mode clamp
				filtering bilinear
				}
			texture_unit
				{
				texture spaceSky.jpg
				tex_address_mode wrap
				color_op modulate
				}
		}
	}
}

material IG2/holesGLSL
{
	technique
	{
		pass
		{
			vertex_program_ref HolesVS
			{ // params -> default_params
			}
			fragment_program_ref HolesFS
			{ // params -> default_params
			}
			cull_hardware none
			cull_software none
			lighting off
			diffuse vertexcolour
			texture_unit
				{
				texture BumpyMetal.jpg
				tex_address_mode clamp
				filtering bilinear
				}
			texture_unit
				{
				texture corrosion.jpg
				tex_address_mode wrap
				color_op modulate
				}
		}
	}
}

material IG2/LuminancePS {
	technique {
		pass {
			depth_check off // desactivar el depth-buffer
			depth_write off
			vertex_program_ref RenderQuadVS 
			{
			}
			fragment_program_ref LuminancePS 
			{
			}
			texture_unit RTT0
			{
				// sin imagen de archivo -> previous render target
				filtering none // tiene la resolución del viewport
			}
		}
	} 
}

material IG2/EdgeEmbossPS {
	technique {
		pass {
			depth_check off // desactivar el depth-buffer
			depth_write off
			vertex_program_ref RenderQuadVS 
			{
			}
			fragment_program_ref Kernel3x3PS
			{
				param_named kernel float9 -4 -2 0 -2 1 2 0 2 4
			}
			texture_unit RTT0
			{
				// sin imagen de archivo -> previous render target
				filtering none // tiene la resolución del viewport
				tex_address_mod clamp
			}
		}
	} 
}

material IG2/ExplotaGS {
	technique {
		pass { 
			cull_hardware none
			cull_software none
			vertex_program_ref ExplotaVS { }
			fragment_program_ref ExplotaFS { }
			geometry_program_ref ExplotaGS { } // también para el GS
			texture_unit
				{
				texture BumpyMetal.jpg
				}
			texture_unit
				{
				texture corrosion.jpg
				}
		} 
	}
}

material IG2/NormalesGS {
	technique { 
		pass {
			vertex_program_ref NormalesVS { }
			fragment_program_ref NormalesFS { }
			geometry_program_ref NormalesGS { } // también para el GS
		} 
	}
}

material IG2/Explota2GS {
	technique {
		pass { 
			cull_hardware none
			cull_software none
			vertex_program_ref ExplotaVS { }
			fragment_program_ref ExplotaFS { }
			geometry_program_ref Explota2GS { } // también para el GS
			texture_unit
				{
				texture BumpyMetal.jpg
				}
			texture_unit
				{
				texture corrosion.jpg
				}
		} 
	}
}